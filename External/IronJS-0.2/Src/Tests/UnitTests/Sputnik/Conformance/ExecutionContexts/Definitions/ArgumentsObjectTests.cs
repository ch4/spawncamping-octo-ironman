// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.ExecutionContexts.Definitions
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class ArgumentsObjectTests : SputnikTestFixture
    {
        public ArgumentsObjectTests()
            : base(@"Conformance\10_Execution_Contexts\10.1_Definitions\10.1.8_Arguments_Object")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 10.1.8")]
        [TestCase("S10.1.8_A1.js", Description = "When control enters an execution context for function code, an arguments object is created and initialised")]
        public void WhenControlEntersAnExecutionContextForFunctionCodeAnArgumentsObjectIsCreatedAndInitialised(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 10.1.8")]
        [TestCase("S10.1.8_A2.js", Description = "The value of the internal [[Prototype]] property of the created arguments object is the original Object prototype object, the one that is the initial value of Object.prototype")]
        public void TheValueOfTheInternalPrototypePropertyOfTheCreatedArgumentsObjectIsTheOriginalObjectPrototypeObjectTheOneThatIsTheInitialValueOfObjectPrototype(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 10.1.8")]
        [TestCase("S10.1.8_A3_T1.js", Description = "A property is created with name callee with property attributes { DontEnum } and no others")]
        [TestCase("S10.1.8_A3_T2.js", Description = "A property is created with name callee with property attributes { DontEnum } and no others")]
        [TestCase("S10.1.8_A3_T3.js", Description = "A property is created with name callee with property attributes { DontEnum } and no others")]
        [TestCase("S10.1.8_A3_T4.js", Description = "A property is created with name callee with property attributes { DontEnum } and no others")]
        public void APropertyIsCreatedWithNameCalleeWithPropertyAttributesDontEnumAndNoOthers(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 10.1.8")]
        [TestCase("S10.1.8_A4.js", Description = "The initial value of the created property callee is the  Function object being executed")]
        public void TheInitialValueOfTheCreatedPropertyCalleeIsTheFunctionObjectBeingExecuted(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 10.1.8")]
        [TestCase("S10.1.8_A5_T1.js", Description = "A property is created with name length with property attributes { DontEnum } and no others")]
        [TestCase("S10.1.8_A5_T2.js", Description = "A property is created with name length with property attributes { DontEnum } and no others")]
        [TestCase("S10.1.8_A5_T3.js", Description = "A property is created with name length with property attributes { DontEnum } and no others")]
        [TestCase("S10.1.8_A5_T4.js", Description = "A property is created with name length with property attributes { DontEnum } and no others")]
        public void APropertyIsCreatedWithNameLengthWithPropertyAttributesDontEnumAndNoOthers(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 10.1.8")]
        [TestCase("S10.1.8_A6.js", Description = "The initial value of the created property length is the number of actual parameter values supplied by the caller")]
        public void TheInitialValueOfTheCreatedPropertyLengthIsTheNumberOfActualParameterValuesSuppliedByTheCaller(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 10.1.8")]
        [TestCase("S10.1.8_A7.js", Description = "Get arguments of function")]
        public void GetArgumentsOfFunction(string file)
        {
            RunFile(file);
        }
    }
}