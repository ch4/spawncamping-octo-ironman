// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.Types
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class TheBooleanTypeTests : SputnikTestFixture
    {
        public TheBooleanTypeTests()
            : base(@"Conformance\08_Types\8.3_The_Boolean_Type")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 8.3")]
        [TestCase("S8.3_A1_T1.js", Description = "The Boolean type have two values, called true and false")]
        [TestCase("S8.3_A1_T2.js", Description = "The Boolean type have two values, called true and false")]
        public void TheBooleanTypeHaveTwoValuesCalledTrueAndFalse(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 8.3")]
        [TestCase("S8.3_A2.1.js", Description = "The true is reserved word", ExpectedException = typeof(Exception))]
        public void TheTrueIsReservedWord(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 8.3")]
        [TestCase("S8.3_A2.2.js", Description = "The false is reserved word", ExpectedException = typeof(Exception))]
        public void TheFalseIsReservedWord(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 8.3")]
        [TestCase("S8.3_A3.js", Description = "Applaing negation to boolean works well")]
        public void ApplaingNegationToBooleanWorksWell(string file)
        {
            RunFile(file);
        }
    }
}