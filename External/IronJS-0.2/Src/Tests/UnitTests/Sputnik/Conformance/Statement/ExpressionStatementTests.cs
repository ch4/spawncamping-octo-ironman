// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.Statement
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class ExpressionStatementTests : SputnikTestFixture
    {
        public ExpressionStatementTests()
            : base(@"Conformance\12_Statement\12.4_Expression_Statement")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 12.4")]
        [TestCase("S12.4_A1.js", Description = "An ExpressionStatement can not start with the function keyword because that might make it ambiguous with a FunctionDeclaration", ExpectedException = typeof(Exception))]
        public void AnExpressionStatementCanNotStartWithTheFunctionKeywordBecauseThatMightMakeItAmbiguousWithAFunctionDeclaration(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 12.4")]
        [TestCase("S12.4_A2_T1.js", Description = "The production ExpressionStatement : [lookahead \\notin {{, function}] Expression")]
        [TestCase("S12.4_A2_T2.js", Description = "The production ExpressionStatement : [lookahead \\notin {{, function}] Expression")]
        public void TheProductionExpressionStatementLookaheadNotinFunctionExpression(string file)
        {
            RunFile(file);
        }
    }
}