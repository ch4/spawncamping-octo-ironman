// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class ProgramTests : SputnikTestFixture
    {
        public ProgramTests()
            : base(@"Conformance\14_Program")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 14")]
        [TestCase("S14_A1.js", Description = "FunctionExpression must be localed in a reacheable fragment of the program")]
        public void FunctionExpressionMustBeLocaledInAReacheableFragmentOfTheProgram(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 14")]
        [TestCase("S14_A2.js", Description = "FunctionDeclaration cannot be localed inside an Expression")]
        public void FunctionDeclarationCannotBeLocaledInsideAnExpression(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 14")]
        [TestCase("S14_A3.js", Description = "Global FunctionDeclaration cannot be defined within the body of another FunctionDeclaration")]
        public void GlobalFunctionDeclarationCannotBeDefinedWithinTheBodyOfAnotherFunctionDeclaration(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 14")]
        [TestCase("S14_A5_T1.js", Description = "The Identifer within a FunctionDeclaration can be written in both letters and unicode")]
        [TestCase("S14_A5_T2.js", Description = "The Identifer within a FunctionDeclaration can be written in both letters and unicode")]
        public void TheIdentiferWithinAFunctionDeclarationCanBeWrittenInBothLettersAndUnicode(string file)
        {
            RunFile(file);
        }
    }
}