// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.LexicalConventions.Tokens
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class ReservedWordsTests : SputnikTestFixture
    {
        public ReservedWordsTests()
            : base(@"Conformance\07_Lexical_Conventions\7.5_Tokens\7.5.1_Reserved_Words")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 7.5.1")]
        [TestCase("S7.5.1_A1.1.js", Description = "The \"null\" token can not be used as identifier", ExpectedException = typeof(Exception))]
        public void TheNullTokenCanNotBeUsedAsIdentifier(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 7.5.1")]
        [TestCase("S7.5.1_A1.2.js", Description = "The \"true\" token can not be used as identifier", ExpectedException = typeof(Exception))]
        public void TheTrueTokenCanNotBeUsedAsIdentifier(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 7.5.1")]
        [TestCase("S7.5.1_A1.3.js", Description = "The \"false\" token can not be used as identifier", ExpectedException = typeof(Exception))]
        public void TheFalseTokenCanNotBeUsedAsIdentifier(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 7.5.1")]
        [TestCase("S7.5.1_A2.js", Description = "List of words that are not reserved")]
        public void ListOfWordsThatAreNotReserved(string file)
        {
            RunFile(file);
        }
    }
}