// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.DateObjects
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class TheDateConstructorCalledAsAFunctionTests : SputnikTestFixture
    {
        public TheDateConstructorCalledAsAFunctionTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.9_Date_Objects\15.9.2_The_Date_Constructor_Called_as_a_Function")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.9.2.1")]
        [TestCase("S15.9.2.1_A1.js", Description = "When Date is called as a function rather than as a constructor, it should be \"string\" representing the current time (UTC)")]
        public void WhenDateIsCalledAsAFunctionRatherThanAsAConstructorItShouldBeStringRepresentingTheCurrentTimeUTC(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.9.2.1")]
        [TestCase("S15.9.2.1_A2.js", Description = "All of the arguments are optional, any arguments supplied are accepted but are completely ignored. A string is created and returned as if by the expression (new Date()).toString()")]
        public void AllOfTheArgumentsAreOptionalAnyArgumentsSuppliedAreAcceptedButAreCompletelyIgnoredAStringIsCreatedAndReturnedAsIfByTheExpressionNewDateToString(string file)
        {
            RunFile(file);
        }
    }
}