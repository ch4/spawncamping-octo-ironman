// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.NumberObjects.PropertiesOfNumberConstructor
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class NumberPrototypeTests : SputnikTestFixture
    {
        public NumberPrototypeTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.7_Number_Objects\15.7.3_Properties_of_Number_Constructor\15.7.3.1_Number.prototype")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.7.3.1")]
        [TestCase("S15.7.3.1_A1_T1.js", Description = "The Number property \"prototype\" has { DontEnum, DontDelete, ReadOnly } attributes")]
        [TestCase("S15.7.3.1_A1_T2.js", Description = "The Number property \"prototype\" has { DontEnum, DontDelete, ReadOnly } attributes")]
        [TestCase("S15.7.3.1_A1_T3.js", Description = "The Number property \"prototype\" has { DontEnum, DontDelete, ReadOnly } attributes")]
        public void TheNumberPropertyPrototypeHasDontEnumDontDeleteReadOnlyAttributes(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.7.3.1")]
        [TestCase("S15.7.3.1_A2_T1.js", Description = "Number.prototype is itself Number object")]
        [TestCase("S15.7.3.1_A2_T2.js", Description = "Number.prototype is itself Number object")]
        public void NumberPrototypeIsItselfNumberObject(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.7.3.1")]
        [TestCase("S15.7.3.1_A3.js", Description = "Number.prototype value is +0")]
        public void NumberPrototypeValueIs0(string file)
        {
            RunFile(file);
        }
    }
}