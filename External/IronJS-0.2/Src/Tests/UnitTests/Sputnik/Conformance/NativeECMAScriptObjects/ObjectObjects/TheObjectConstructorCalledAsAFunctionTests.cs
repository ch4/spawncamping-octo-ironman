// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.ObjectObjects
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class TheObjectConstructorCalledAsAFunctionTests : SputnikTestFixture
    {
        public TheObjectConstructorCalledAsAFunctionTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.2_Object_Objects\15.2.1_The_Object_Constructor_Called_as_a_Function")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.2.1.1")]
        [Category("ECMA 15.2.2.1")]
        [TestCase("S15.2.1.1_A1_T1.js", Description = "When the Object(value) is called and the value is null, undefined or not supplied, create and return a new Object object if the object constructor had been called with the same arguments (15.2.2.1)")]
        [TestCase("S15.2.1.1_A1_T2.js", Description = "When the Object(value) is called and the value is null, undefined or not supplied, create and return a new Object object if the object constructor had been called with the same arguments (15.2.2.1)")]
        [TestCase("S15.2.1.1_A1_T3.js", Description = "When the Object(value) is called and the value is null, undefined or not supplied, create and return a new Object object if the object constructor had been called with the same arguments (15.2.2.1)")]
        [TestCase("S15.2.1.1_A1_T4.js", Description = "When the Object(value) is called and the value is null, undefined or not supplied, create and return a new Object object if the object constructor had been called with the same arguments (15.2.2.1)")]
        [TestCase("S15.2.1.1_A1_T5.js", Description = "When the Object(value) is called and the value is null, undefined or not supplied, create and return a new Object object if the object constructor had been called with the same arguments (15.2.2.1)")]
        public void WhenTheObjectValueIsCalledAndTheValueIsNullUndefinedOrNotSuppliedCreateAndReturnANewObjectObjectIfTheObjectConstructorHadBeenCalledWithTheSameArguments15221(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.2.1.1")]
        [TestCase("S15.2.1.1_A2_T1.js", Description = "When the Object function is called with one argument value, and the value neither is null nor undefined, and is supplied, return ToObject(value)")]
        [TestCase("S15.2.1.1_A2_T10.js", Description = "When the Object function is called with one argument value, and the value neither is null nor undefined, and is supplied, return ToObject(value)")]
        [TestCase("S15.2.1.1_A2_T11.js", Description = "When the Object function is called with one argument value, and the value neither is null nor undefined, and is supplied, return ToObject(value)")]
        [TestCase("S15.2.1.1_A2_T12.js", Description = "When the Object function is called with one argument value, and the value neither is null nor undefined, and is supplied, return ToObject(value)")]
        [TestCase("S15.2.1.1_A2_T13.js", Description = "When the Object function is called with one argument value, and the value neither is null nor undefined, and is supplied, return ToObject(value)")]
        [TestCase("S15.2.1.1_A2_T14.js", Description = "When the Object function is called with one argument value, and the value neither is null nor undefined, and is supplied, return ToObject(value)")]
        [TestCase("S15.2.1.1_A2_T2.js", Description = "When the Object function is called with one argument value, and the value neither is null nor undefined, and is supplied, return ToObject(value)")]
        [TestCase("S15.2.1.1_A2_T3.js", Description = "When the Object function is called with one argument value, and the value neither is null nor undefined, and is supplied, return ToObject(value)")]
        [TestCase("S15.2.1.1_A2_T4.js", Description = "When the Object function is called with one argument value, and the value neither is null nor undefined, and is supplied, return ToObject(value)")]
        [TestCase("S15.2.1.1_A2_T5.js", Description = "When the Object function is called with one argument value, and the value neither is null nor undefined, and is supplied, return ToObject(value)")]
        [TestCase("S15.2.1.1_A2_T6.js", Description = "When the Object function is called with one argument value, and the value neither is null nor undefined, and is supplied, return ToObject(value)")]
        [TestCase("S15.2.1.1_A2_T7.js", Description = "When the Object function is called with one argument value, and the value neither is null nor undefined, and is supplied, return ToObject(value)")]
        [TestCase("S15.2.1.1_A2_T8.js", Description = "When the Object function is called with one argument value, and the value neither is null nor undefined, and is supplied, return ToObject(value)")]
        [TestCase("S15.2.1.1_A2_T9.js", Description = "When the Object function is called with one argument value, and the value neither is null nor undefined, and is supplied, return ToObject(value)")]
        public void WhenTheObjectFunctionIsCalledWithOneArgumentValueAndTheValueNeitherIsNullNorUndefinedAndIsSuppliedReturnToObjectValue(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.2.1.1")]
        [TestCase("S15.2.1.1_A3_T1.js", Description = "Since calling Object as a function is identical to calling a function, list of arguments bracketing is allowed")]
        [TestCase("S15.2.1.1_A3_T2.js", Description = "Since calling Object as a function is identical to calling a function, list of arguments bracketing is allowed")]
        [TestCase("S15.2.1.1_A3_T3.js", Description = "Since calling Object as a function is identical to calling a function, list of arguments bracketing is allowed")]
        public void SinceCallingObjectAsAFunctionIsIdenticalToCallingAFunctionListOfArgumentsBracketingIsAllowed(string file)
        {
            RunFile(file);
        }
    }
}