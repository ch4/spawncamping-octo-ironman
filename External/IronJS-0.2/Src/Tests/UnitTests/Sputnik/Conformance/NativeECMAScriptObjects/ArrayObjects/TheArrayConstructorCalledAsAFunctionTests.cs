// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.ArrayObjects
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class TheArrayConstructorCalledAsAFunctionTests : SputnikTestFixture
    {
        public TheArrayConstructorCalledAsAFunctionTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.4_Array_Objects\15.4.1_The_Array_Constructor_Called_as_a_Function")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.2.4.2")]
        [Category("ECMA 15.2.4.5")]
        [Category("ECMA 15.2.4.6")]
        [Category("ECMA 15.4.1")]
        [TestCase("S15.4.1_A1.1_T1.js", Description = "The [[Prototype]] property of the newly constructed object is set to the original Array prototype object, the one that is the initial value of Array.prototype")]
        [TestCase("S15.4.1_A1.1_T2.js", Description = "The [[Prototype]] property of the newly constructed object is set to the original Array prototype object, the one that is the initial value of Array.prototype")]
        [TestCase("S15.4.1_A1.1_T3.js", Description = "The [[Prototype]] property of the newly constructed object is set to the original Array prototype object, the one that is the initial value of Array.prototype")]
        public void ThePrototypePropertyOfTheNewlyConstructedObjectIsSetToTheOriginalArrayPrototypeObjectTheOneThatIsTheInitialValueOfArrayPrototype(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.2.4.2")]
        [Category("ECMA 15.4.1")]
        [TestCase("S15.4.1_A1.2_T1.js", Description = "The [[Class]] property of the newly constructed object is set to \"Array\"")]
        public void TheClassPropertyOfTheNewlyConstructedObjectIsSetToArray(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.4.1")]
        [TestCase("S15.4.1_A1.3_T1.js", Description = "This description of Array constructor applies if and only if the Array constructor is given no arguments or at least two arguments")]
        public void ThisDescriptionOfArrayConstructorAppliesIfAndOnlyIfTheArrayConstructorIsGivenNoArgumentsOrAtLeastTwoArguments(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.4.1")]
        [TestCase("S15.4.1_A2.1_T1.js", Description = "The length property of the newly constructed object")]
        public void TheLengthPropertyOfTheNewlyConstructedObject(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.4.1")]
        [TestCase("S15.4.1_A2.2_T1.js", Description = "The 0 property of the newly constructed object is set to item0 (if supplied)")]
        public void The0PropertyOfTheNewlyConstructedObjectIsSetToItem0IfSupplied(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.4.3")]
        [Category("ECMA 11.8.6")]
        [Category("ECMA 15.4.1")]
        [TestCase("S15.4.1_A3.1_T1.js", Description = "When Array is called as a function rather than as a constructor, it creates and initialises a new Array object")]
        public void WhenArrayIsCalledAsAFunctionRatherThanAsAConstructorItCreatesAndInitialisesANewArrayObject(string file)
        {
            RunFile(file);
        }
    }
}