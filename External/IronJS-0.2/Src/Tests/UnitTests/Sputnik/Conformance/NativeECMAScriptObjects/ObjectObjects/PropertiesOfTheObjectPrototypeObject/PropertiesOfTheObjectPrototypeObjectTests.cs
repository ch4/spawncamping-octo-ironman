// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.ObjectObjects.PropertiesOfTheObjectPrototypeObject
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class PropertiesOfTheObjectPrototypeObjectTests : SputnikTestFixture
    {
        public PropertiesOfTheObjectPrototypeObjectTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.2_Object_Objects\15.2.4_Properties_of_the_Object_Prototype_Object")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.2.4.1")]
        [TestCase("S15.2.4.1_A1_T1.js", Description = "The initial value of Object.prototype.constructor is the built-in Object constructor")]
        [TestCase("S15.2.4.1_A1_T2.js", Description = "The initial value of Object.prototype.constructor is the built-in Object constructor")]
        public void TheInitialValueOfObjectPrototypeConstructorIsTheBuiltInObjectConstructor(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.2.4")]
        [Category("ECMA 8.6.2")]
        [TestCase("S15.2.4_A1_T1.js", Description = "Object prototype object has not prototype")]
        [TestCase("S15.2.4_A1_T2.js", Description = "Object prototype object has not prototype")]
        public void ObjectPrototypeObjectHasNotPrototype(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.2.4")]
        [TestCase("S15.2.4_A2.js", Description = "The value of the internal [[Class]] property of Object prototype object is \"Object\"")]
        public void TheValueOfTheInternalClassPropertyOfObjectPrototypeObjectIsObject(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.2.4")]
        [TestCase("S15.2.4_A3.js", Description = "Since the Object prototype object is not a function, it has not [[call]] method")]
        public void SinceTheObjectPrototypeObjectIsNotAFunctionItHasNotCallMethod(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.2.4")]
        [TestCase("S15.2.4_A4.js", Description = "Since the Object prototype object is not a function, it has not [[create]] method")]
        public void SinceTheObjectPrototypeObjectIsNotAFunctionItHasNotCreateMethod(string file)
        {
            RunFile(file);
        }
    }
}