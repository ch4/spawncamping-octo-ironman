// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.ArrayObjects.PropertiesOfArrayInstances
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class LengthTests : SputnikTestFixture
    {
        public LengthTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.4_Array_Objects\15.4.5_Properties_of_Array_Instances\15.4.5.2_length")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.4")]
        [Category("ECMA 15.4.5.2")]
        [TestCase("S15.4.5.2_A1_T1.js", Description = "Every Array object has a length property whose value is always a nonnegative integer less than 2^32. The value of the length property is numerically greater than the name of every property whose name is an array index")]
        [TestCase("S15.4.5.2_A1_T2.js", Description = "Every Array object has a length property whose value is always a nonnegative integer less than 2^32. The value of the length property is numerically greater than the name of every property whose name is an array index")]
        public void EveryArrayObjectHasALengthPropertyWhoseValueIsAlwaysANonnegativeIntegerLessThan232TheValueOfTheLengthPropertyIsNumericallyGreaterThanTheNameOfEveryPropertyWhoseNameIsAnArrayIndex(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.4")]
        [Category("ECMA 15.4.5.2")]
        [TestCase("S15.4.5.2_A2_T1.js", Description = "If a property is added whose name is an array index, the length property is changed")]
        public void IfAPropertyIsAddedWhoseNameIsAnArrayIndexTheLengthPropertyIsChanged(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.4")]
        [Category("ECMA 15.4.2.2")]
        [Category("ECMA 15.4.5.2")]
        [TestCase("S15.4.5.2_A3_T1.js", Description = "If the length property is changed, every property whose name is an array index whose value is not smaller than the new length is automatically deleted")]
        [TestCase("S15.4.5.2_A3_T2.js", Description = "If the length property is changed, every property whose name is an array index whose value is not smaller than the new length is automatically deleted")]
        [TestCase("S15.4.5.2_A3_T3.js", Description = "If the length property is changed, every property whose name is an array index whose value is not smaller than the new length is automatically deleted")]
        [TestCase("S15.4.5.2_A3_T4.js", Description = "If the length property is changed, every property whose name is an array index whose value is not smaller than the new length is automatically deleted")]
        public void IfTheLengthPropertyIsChangedEveryPropertyWhoseNameIsAnArrayIndexWhoseValueIsNotSmallerThanTheNewLengthIsAutomaticallyDeleted(string file)
        {
            RunFile(file);
        }
    }
}