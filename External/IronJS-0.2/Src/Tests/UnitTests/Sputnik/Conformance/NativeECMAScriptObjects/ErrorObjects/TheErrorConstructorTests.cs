// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.ErrorObjects
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class TheErrorConstructorTests : SputnikTestFixture
    {
        public TheErrorConstructorTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.11_Error_Objects\15.11.2_The_Error_Constructor")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.11.2.1")]
        [Category("ECMA 16")]
        [TestCase("S15.11.2.1_A1_T1.js", Description = "If the argument \"message\" is not undefined, the message property of the newly constructed object is set to ToString(message)")]
        public void IfTheArgumentMessageIsNotUndefinedTheMessagePropertyOfTheNewlyConstructedObjectIsSetToToStringMessage(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.11.2.1")]
        [Category("ECMA 16")]
        [TestCase("S15.11.2.1_A2_T1.js", Description = "The [[Prototype]] property of the newly constructed object is set to the original Error prototype object, the one that is the initial value of Error.prototype (15.11.3.1)")]
        public void ThePrototypePropertyOfTheNewlyConstructedObjectIsSetToTheOriginalErrorPrototypeObjectTheOneThatIsTheInitialValueOfErrorPrototype151131(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.11.2.1")]
        [Category("ECMA 16")]
        [TestCase("S15.11.2.1_A3_T1.js", Description = "The [[Class]] property of the newly constructed object is set to \"Error\"")]
        public void TheClassPropertyOfTheNewlyConstructedObjectIsSetToError(string file)
        {
            RunFile(file);
        }
    }
}