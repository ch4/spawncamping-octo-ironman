// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.TheMathObject.FunctionPropertiesOfTheMathObject
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class ExpTests : SputnikTestFixture
    {
        public ExpTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.8_The_Math_Object\15.8.2_Function_Properties_of_the_Math_Object\15.8.2.8_exp")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.8.2.8")]
        [TestCase("S15.8.2.8_A1.js", Description = "If x is NaN, Math.exp(x) is NaN")]
        public void IfXIsNaNMathExpXIsNaN(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.8.2.8")]
        [TestCase("S15.8.2.8_A2.js", Description = "If x is +0, Math.exp(x) is 1")]
        [TestCase("S15.8.2.8_A3.js", Description = "If x is -0, Math.exp(x) is 1")]
        public void IfXIs0MathExpXIs1(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.8.2.8")]
        [TestCase("S15.8.2.8_A4.js", Description = "If x is +Infinity, Math.exp(x) is +Ifinity")]
        public void IfXIsInfinityMathExpXIsIfinity(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.8.2.8")]
        [TestCase("S15.8.2.8_A5.js", Description = "If x is -Infinity, Math.exp(x) is +0")]
        public void IfXIsInfinityMathExpXIs0(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.8.2.8")]
        [TestCase("S15.8.2.8_A6.js", Description = "Math.exp, recommended that implementations use the approximation algorithms for IEEE 754 arithmetic contained in fdlibm")]
        public void MathExpRecommendedThatImplementationsUseTheApproximationAlgorithmsForIEEE754ArithmeticContainedInFdlibm(string file)
        {
            RunFile(file);
        }
    }
}