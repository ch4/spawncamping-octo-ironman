// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.RegExpObjects.PatternSemantics
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class DisjunctionTests : SputnikTestFixture
    {
        public DisjunctionTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.10_RegExp_Objects\15.10.2_Pattern_Semantics\15.10.2.3_Disjunction")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.10.2.3")]
        [TestCase("S15.10.2.3_A1_T1.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        [TestCase("S15.10.2.3_A1_T10.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        [TestCase("S15.10.2.3_A1_T11.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        [TestCase("S15.10.2.3_A1_T12.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        [TestCase("S15.10.2.3_A1_T13.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        [TestCase("S15.10.2.3_A1_T14.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        [TestCase("S15.10.2.3_A1_T15.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        [TestCase("S15.10.2.3_A1_T16.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        [TestCase("S15.10.2.3_A1_T17.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        [TestCase("S15.10.2.3_A1_T2.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        [TestCase("S15.10.2.3_A1_T3.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        [TestCase("S15.10.2.3_A1_T4.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        [TestCase("S15.10.2.3_A1_T5.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        [TestCase("S15.10.2.3_A1_T6.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        [TestCase("S15.10.2.3_A1_T7.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        [TestCase("S15.10.2.3_A1_T8.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        [TestCase("S15.10.2.3_A1_T9.js", Description = "The | regular expression operator separates two alternatives. The pattern first tries to match the left Alternative (followed by the sequel of the regular expression). If it fails, it tries to match the right Disjunction (followed by the sequel of the regular expression)")]
        public void TheRegularExpressionOperatorSeparatesTwoAlternativesThePatternFirstTriesToMatchTheLeftAlternativeFollowedByTheSequelOfTheRegularExpressionIfItFailsItTriesToMatchTheRightDisjunctionFollowedByTheSequelOfTheRegularExpression(string file)
        {
            RunFile(file);
        }
    }
}