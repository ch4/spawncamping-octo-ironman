// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.NumberObjects.PropertiesOfNumberConstructor
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class PropertiesOfNumberConstructorTests : SputnikTestFixture
    {
        public PropertiesOfNumberConstructorTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.7_Number_Objects\15.7.3_Properties_of_Number_Constructor")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.7.3")]
        [TestCase("S15.7.3_A1.js", Description = "The Number constructor has the property \"prototype\"")]
        public void TheNumberConstructorHasThePropertyPrototype(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.7.3")]
        [TestCase("S15.7.3_A2.js", Description = "The Number constructor has the property \"MAX_VALUE\"")]
        public void TheNumberConstructorHasThePropertyMAX_VALUE(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.7.3")]
        [TestCase("S15.7.3_A3.js", Description = "The Number constructor has the property \"MIN_VALUE\"")]
        public void TheNumberConstructorHasThePropertyMIN_VALUE(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.7.3")]
        [TestCase("S15.7.3_A4.js", Description = "The Number constructor has the property \"NaN\"")]
        public void TheNumberConstructorHasThePropertyNaN(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.7.3")]
        [TestCase("S15.7.3_A5.js", Description = "The Number constructor has the property \"NEGATIVE_INFINITY\"")]
        public void TheNumberConstructorHasThePropertyNEGATIVE_INFINITY(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.7.3")]
        [TestCase("S15.7.3_A6.js", Description = "The Number constructor has the property \"POSITIVE_INFINITY\"")]
        public void TheNumberConstructorHasThePropertyPOSITIVE_INFINITY(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.7.3")]
        [TestCase("S15.7.3_A7.js", Description = "The value of the internal [[Prototype]] property of the Number constructor is the Function prototype object")]
        public void TheValueOfTheInternalPrototypePropertyOfTheNumberConstructorIsTheFunctionPrototypeObject(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.7.3")]
        [TestCase("S15.7.3_A8.js", Description = "Number constructor has length property whose value is 1")]
        public void NumberConstructorHasLengthPropertyWhoseValueIs1(string file)
        {
            RunFile(file);
        }
    }
}