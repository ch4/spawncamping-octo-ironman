// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.TheGlobalObject.FunctionPropertiesOfTheGlobalObject
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class IsNaNTests : SputnikTestFixture
    {
        public IsNaNTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.1_The_Global_Object\15.1.2_Function_Properties_of_the_Global_Object\15.1.2.4_isNaN")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.1.2.4")]
        [TestCase("S15.1.2.4_A1_T1.js", Description = "isNaN applies ToNumber to its argument, then return true if the result is NaN, and otherwise return false")]
        [TestCase("S15.1.2.4_A1_T2.js", Description = "isNaN applies ToNumber to its argument, then return true if the result is NaN, and otherwise return false")]
        public void IsNaNAppliesToNumberToItsArgumentThenReturnTrueIfTheResultIsNaNAndOtherwiseReturnFalse(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 12.6.4")]
        [Category("ECMA 15.1.2.4")]
        [Category("ECMA 15.2.4.7")]
        [TestCase("S15.1.2.4_A2.1.js", Description = "The length property of isNaN has the attribute DontEnum")]
        public void TheLengthPropertyOfIsNaNHasTheAttributeDontEnum(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.4.1")]
        [Category("ECMA 15.1.2.4")]
        [Category("ECMA 15.2.4.5")]
        [TestCase("S15.1.2.4_A2.2.js", Description = "The length property of isNaN has the attribute DontDelete")]
        public void TheLengthPropertyOfIsNaNHasTheAttributeDontDelete(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.1.2.4")]
        [TestCase("S15.1.2.4_A2.3.js", Description = "The length property of isNaN has the attribute ReadOnly")]
        public void TheLengthPropertyOfIsNaNHasTheAttributeReadOnly(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.1.2.4")]
        [TestCase("S15.1.2.4_A2.4.js", Description = "The length property of isNaN is 1")]
        public void TheLengthPropertyOfIsNaNIs1(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 12.6.4")]
        [Category("ECMA 15.1.2.4")]
        [Category("ECMA 15.2.4.7")]
        [TestCase("S15.1.2.4_A2.5.js", Description = "The isNaN property has the attribute DontEnum")]
        public void TheIsNaNPropertyHasTheAttributeDontEnum(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.1.2.4")]
        [TestCase("S15.1.2.4_A2.6.js", Description = "The isNaN property has not prototype property")]
        public void TheIsNaNPropertyHasNotPrototypeProperty(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.2.2")]
        [Category("ECMA 15.1.2.4")]
        [TestCase("S15.1.2.4_A2.7.js", Description = "The isNaN property can\'t be used as constructor")]
        public void TheIsNaNPropertyCanTBeUsedAsConstructor(string file)
        {
            RunFile(file);
        }
    }
}