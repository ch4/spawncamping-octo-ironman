// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.StringObjects.PropertiesOfTheStringPrototypeObject
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class StringPrototypeCharCodeAtTests : SputnikTestFixture
    {
        public StringPrototypeCharCodeAtTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.5_String_Objects\15.5.4_Properties_of_the_String_Prototype_Object\15.5.4.5_String.prototype.charCodeAt")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 13.2")]
        [Category("ECMA 15.5.4.5")]
        [TestCase("S15.5.4.5_A1.1.js", Description = "String.prototype.charCodeAt() can accept many arguments")]
        public void StringPrototypeCharCodeAtCanAcceptManyArguments(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.5")]
        [TestCase("S15.5.4.5_A1_T1.js", Description = "String.prototype.charCodeAt(pos)")]
        [TestCase("S15.5.4.5_A1_T10.js", Description = "String.prototype.charCodeAt(pos)")]
        [TestCase("S15.5.4.5_A1_T2.js", Description = "String.prototype.charCodeAt(pos)")]
        [TestCase("S15.5.4.5_A1_T3.js", Description = "String.prototype.charCodeAt(pos)")]
        [TestCase("S15.5.4.5_A1_T4.js", Description = "String.prototype.charCodeAt(pos)")]
        [TestCase("S15.5.4.5_A1_T5.js", Description = "String.prototype.charCodeAt(pos)")]
        [TestCase("S15.5.4.5_A1_T6.js", Description = "String.prototype.charCodeAt(pos)")]
        [TestCase("S15.5.4.5_A1_T7.js", Description = "String.prototype.charCodeAt(pos)")]
        [TestCase("S15.5.4.5_A1_T8.js", Description = "String.prototype.charCodeAt(pos)")]
        [TestCase("S15.5.4.5_A1_T9.js", Description = "String.prototype.charCodeAt(pos)")]
        public void StringPrototypeCharCodeAtPos(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.5")]
        [TestCase("S15.5.4.5_A10.js", Description = "The String.prototype.charCodeAt.length property has the attribute ReadOnly")]
        public void TheStringPrototypeCharCodeAtLengthPropertyHasTheAttributeReadOnly(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.5")]
        [TestCase("S15.5.4.5_A11.js", Description = "The length property of the charCodeAt method is 1")]
        public void TheLengthPropertyOfTheCharCodeAtMethodIs1(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.5")]
        [TestCase("S15.5.4.5_A2.js", Description = "When String.prototype.charCodeAt(pos) calls if ToInteger(pos) less than 0 the NaN returns")]
        public void WhenStringPrototypeCharCodeAtPosCallsIfToIntegerPosLessThan0TheNaNReturns(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.5")]
        [TestCase("S15.5.4.5_A3.js", Description = "When String.prototype.charCodeAt(pos) calls if ToInteger(pos) not less than ToString(this value) the NaN returns")]
        public void WhenStringPrototypeCharCodeAtPosCallsIfToIntegerPosNotLessThanToStringThisValueTheNaNReturns(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.5")]
        [TestCase("S15.5.4.5_A4.js", Description = "When String.prototype.charCodeAt(pos) calls first calls ToString, giving it the this value as its argument")]
        public void WhenStringPrototypeCharCodeAtPosCallsFirstCallsToStringGivingItTheThisValueAsItsArgument(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 13.2")]
        [Category("ECMA 15.5.4.5")]
        [TestCase("S15.5.4.5_A6.js", Description = "String.prototype.charCodeAt has not prototype property")]
        public void StringPrototypeCharCodeAtHasNotPrototypeProperty(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 13.2")]
        [Category("ECMA 15.5.4.5")]
        [TestCase("S15.5.4.5_A7.js", Description = "String.prototype.charCodeAt can\'t be used as constructor")]
        public void StringPrototypeCharCodeAtCanTBeUsedAsConstructor(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.5")]
        [TestCase("S15.5.4.5_A8.js", Description = "The String.prototype.charCodeAt.length property has the attribute DontEnum")]
        public void TheStringPrototypeCharCodeAtLengthPropertyHasTheAttributeDontEnum(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.5")]
        [TestCase("S15.5.4.5_A9.js", Description = "The String.prototype.charCodeAt.length property has the attribute DontDelete")]
        public void TheStringPrototypeCharCodeAtLengthPropertyHasTheAttributeDontDelete(string file)
        {
            RunFile(file);
        }
    }
}