// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.ArrayObjects.PropertiesOfTheArrayPrototypeObject
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class ArrayPrototypeConcatTests : SputnikTestFixture
    {
        public ArrayPrototypeConcatTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.4_Array_Objects\15.4.4_Properties_of_the_Array_Prototype_Object\15.4.4.4_Array_prototype_concat")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.4.4.4")]
        [TestCase("S15.4.4.4_A1_T1.js", Description = "When the concat method is called with zero or more arguments item1, item2, etc., it returns an array containing the array elements of the object followed by the array elements of each argument in order")]
        [TestCase("S15.4.4.4_A1_T2.js", Description = "When the concat method is called with zero or more arguments item1, item2, etc., it returns an array containing the array elements of the object followed by the array elements of each argument in order")]
        [TestCase("S15.4.4.4_A1_T3.js", Description = "When the concat method is called with zero or more arguments item1, item2, etc., it returns an array containing the array elements of the object followed by the array elements of each argument in order")]
        [TestCase("S15.4.4.4_A1_T4.js", Description = "When the concat method is called with zero or more arguments item1, item2, etc., it returns an array containing the array elements of the object followed by the array elements of each argument in order")]
        public void WhenTheConcatMethodIsCalledWithZeroOrMoreArgumentsItem1Item2EtcItReturnsAnArrayContainingTheArrayElementsOfTheObjectFollowedByTheArrayElementsOfEachArgumentInOrder(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.4.4.4")]
        [TestCase("S15.4.4.4_A2_T1.js", Description = "The concat function is intentionally generic. It does not require that its this value be an Array object")]
        [TestCase("S15.4.4.4_A2_T2.js", Description = "The concat function is intentionally generic. It does not require that its this value be an Array object")]
        public void TheConcatFunctionIsIntentionallyGenericItDoesNotRequireThatItsThisValueBeAnArrayObject(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.2.4.5")]
        [Category("ECMA 15.4.4.4")]
        [Category("ECMA 8.6.2.1")]
        [TestCase("S15.4.4.4_A3_T1.js", Description = "[[Get]] from not an inherited property")]
        public void GetFromNotAnInheritedProperty(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 12.6.4")]
        [Category("ECMA 15.2.4.7")]
        [Category("ECMA 15.4.4.4")]
        [TestCase("S15.4.4.4_A4.1.js", Description = "The length property of concat has the attribute DontEnum")]
        public void TheLengthPropertyOfConcatHasTheAttributeDontEnum(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.4.1")]
        [Category("ECMA 15.2.4.5")]
        [Category("ECMA 15.4.4.4")]
        [TestCase("S15.4.4.4_A4.2.js", Description = "The length property of concat has the attribute DontDelete")]
        public void TheLengthPropertyOfConcatHasTheAttributeDontDelete(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.4.4.4")]
        [TestCase("S15.4.4.4_A4.3.js", Description = "The length property of concat has the attribute ReadOnly")]
        public void TheLengthPropertyOfConcatHasTheAttributeReadOnly(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.4.4.4")]
        [TestCase("S15.4.4.4_A4.4.js", Description = "The length property of concat is 1")]
        public void TheLengthPropertyOfConcatIs1(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 12.6.4")]
        [Category("ECMA 15.2.4.7")]
        [Category("ECMA 15.4.4.4")]
        [TestCase("S15.4.4.4_A4.5.js", Description = "The concat property of Array has the attribute DontEnum")]
        public void TheConcatPropertyOfArrayHasTheAttributeDontEnum(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.4.4.4")]
        [TestCase("S15.4.4.4_A4.6.js", Description = "The concat property of Array has not prototype property")]
        public void TheConcatPropertyOfArrayHasNotPrototypeProperty(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.2.2")]
        [Category("ECMA 15.4.4.4")]
        [TestCase("S15.4.4.4_A4.7.js", Description = "The concat property of Array can\'t be used as constructor")]
        public void TheConcatPropertyOfArrayCanTBeUsedAsConstructor(string file)
        {
            RunFile(file);
        }
    }
}