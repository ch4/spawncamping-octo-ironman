// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.FunctionObjects.PropertiesOfTheFunctionPrototypeObject
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class FunctionPrototypeCallTests : SputnikTestFixture
    {
        public FunctionPrototypeCallTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.3_Function_Objects\15.3.4_Properties_of_the_Function_Prototype_Object\15.3.4.4_Function.prototype.call")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.3.4.4")]
        [TestCase("S15.3.4.4_A1_T1.js", Description = "The call method performs a function call using the [[Call]] property of the object. If the object does not have a [[Call]] property, a TypeError exception is thrown")]
        [TestCase("S15.3.4.4_A1_T2.js", Description = "The call method performs a function call using the [[Call]] property of the object. If the object does not have a [[Call]] property, a TypeError exception is thrown")]
        public void TheCallMethodPerformsAFunctionCallUsingTheCallPropertyOfTheObjectIfTheObjectDoesNotHaveACallPropertyATypeErrorExceptionIsThrown(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.3.4.4")]
        [TestCase("S15.3.4.4_A10.js", Description = "The Function.prototype.call.length property has the attribute ReadOnly")]
        public void TheFunctionPrototypeCallLengthPropertyHasTheAttributeReadOnly(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.3.4.4")]
        [TestCase("S15.3.4.4_A11.js", Description = "The Function.prototype.call.length property has the attribute DontEnum")]
        public void TheFunctionPrototypeCallLengthPropertyHasTheAttributeDontEnum(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 13.2")]
        [Category("ECMA 15.3.4.4")]
        [TestCase("S15.3.4.4_A12.js", Description = "Function.prototype.call has not prototype property")]
        public void FunctionPrototypeCallHasNotPrototypeProperty(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.3.4.4")]
        [TestCase("S15.3.4.4_A2_T1.js", Description = "The length property of the call method is 1")]
        [TestCase("S15.3.4.4_A2_T2.js", Description = "The length property of the call method is 1")]
        public void TheLengthPropertyOfTheCallMethodIs1(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.3.4.4")]
        [TestCase("S15.3.4.4_A3_T1.js", Description = "If thisArg is null or undefined, the called function is passed the global object as the this value")]
        [TestCase("S15.3.4.4_A3_T10.js", Description = "If thisArg is null or undefined, the called function is passed the global object as the this value")]
        [TestCase("S15.3.4.4_A3_T2.js", Description = "If thisArg is null or undefined, the called function is passed the global object as the this value")]
        [TestCase("S15.3.4.4_A3_T3.js", Description = "If thisArg is null or undefined, the called function is passed the global object as the this value")]
        [TestCase("S15.3.4.4_A3_T4.js", Description = "If thisArg is null or undefined, the called function is passed the global object as the this value")]
        [TestCase("S15.3.4.4_A3_T5.js", Description = "If thisArg is null or undefined, the called function is passed the global object as the this value")]
        [TestCase("S15.3.4.4_A3_T6.js", Description = "If thisArg is null or undefined, the called function is passed the global object as the this value")]
        [TestCase("S15.3.4.4_A3_T7.js", Description = "If thisArg is null or undefined, the called function is passed the global object as the this value")]
        [TestCase("S15.3.4.4_A3_T8.js", Description = "If thisArg is null or undefined, the called function is passed the global object as the this value")]
        [TestCase("S15.3.4.4_A3_T9.js", Description = "If thisArg is null or undefined, the called function is passed the global object as the this value")]
        public void IfThisArgIsNullOrUndefinedTheCalledFunctionIsPassedTheGlobalObjectAsTheThisValue(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.3.4.4")]
        [TestCase("S15.3.4.4_A5_T1.js", Description = "If thisArg is not null(defined) the called function is passed ToObject(thisArg) as the this value")]
        [TestCase("S15.3.4.4_A5_T2.js", Description = "If thisArg is not null(defined) the called function is passed ToObject(thisArg) as the this value")]
        [TestCase("S15.3.4.4_A5_T3.js", Description = "If thisArg is not null(defined) the called function is passed ToObject(thisArg) as the this value")]
        [TestCase("S15.3.4.4_A5_T4.js", Description = "If thisArg is not null(defined) the called function is passed ToObject(thisArg) as the this value")]
        [TestCase("S15.3.4.4_A5_T5.js", Description = "If thisArg is not null(defined) the called function is passed ToObject(thisArg) as the this value")]
        [TestCase("S15.3.4.4_A5_T6.js", Description = "If thisArg is not null(defined) the called function is passed ToObject(thisArg) as the this value")]
        [TestCase("S15.3.4.4_A5_T7.js", Description = "If thisArg is not null(defined) the called function is passed ToObject(thisArg) as the this value")]
        [TestCase("S15.3.4.4_A5_T8.js", Description = "If thisArg is not null(defined) the called function is passed ToObject(thisArg) as the this value")]
        public void IfThisArgIsNotNullDefinedTheCalledFunctionIsPassedToObjectThisArgAsTheThisValue(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.3.4.4")]
        [TestCase("S15.3.4.4_A6_T1.js", Description = "The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object")]
        [TestCase("S15.3.4.4_A6_T10.js", Description = "The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object")]
        [TestCase("S15.3.4.4_A6_T2.js", Description = "The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object")]
        [TestCase("S15.3.4.4_A6_T3.js", Description = "The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object")]
        [TestCase("S15.3.4.4_A6_T4.js", Description = "The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object")]
        [TestCase("S15.3.4.4_A6_T5.js", Description = "The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object")]
        [TestCase("S15.3.4.4_A6_T6.js", Description = "The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object")]
        [TestCase("S15.3.4.4_A6_T7.js", Description = "The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object")]
        [TestCase("S15.3.4.4_A6_T8.js", Description = "The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object")]
        [TestCase("S15.3.4.4_A6_T9.js", Description = "The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object")]
        public void TheCallMethodTakesOneOrMoreArgumentsThisArgAndOptionallyArg1Arg2EtcAndPerformsAFunctionCallUsingTheCallPropertyOfTheObject(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.3.4.4")]
        [TestCase("S15.3.4.4_A7_T1.js", Description = "Function.prototype.call can\'t be used as [[create]] caller")]
        [TestCase("S15.3.4.4_A7_T2.js", Description = "Function.prototype.call can\'t be used as [[create]] caller")]
        [TestCase("S15.3.4.4_A7_T3.js", Description = "Function.prototype.call can\'t be used as [[create]] caller")]
        [TestCase("S15.3.4.4_A7_T4.js", Description = "Function.prototype.call can\'t be used as [[create]] caller")]
        [TestCase("S15.3.4.4_A7_T5.js", Description = "Function.prototype.call can\'t be used as [[create]] caller")]
        [TestCase("S15.3.4.4_A7_T6.js", Description = "Function.prototype.call can\'t be used as [[create]] caller")]
        public void FunctionPrototypeCallCanTBeUsedAsCreateCaller(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.3.4.4")]
        [TestCase("S15.3.4.4_A9.js", Description = "The Function.prototype.call.length property has the attribute DontDelete")]
        public void TheFunctionPrototypeCallLengthPropertyHasTheAttributeDontDelete(string file)
        {
            RunFile(file);
        }
    }
}