// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.StringObjects
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class PropertiesOfTheStringConstructorTests : SputnikTestFixture
    {
        public PropertiesOfTheStringConstructorTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.5_String_Objects\15.5.3_Properties_of_the_String_Constructor")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.3.1")]
        [Category("ECMA 15.5.4")]
        [TestCase("S15.5.3.1_A1.js", Description = "The String has property prototype")]
        public void TheStringHasPropertyPrototype(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.3.1")]
        [Category("ECMA 15.5.4")]
        [TestCase("S15.5.3.1_A2.js", Description = "The String.prototype property has the attribute DontEnum")]
        public void TheStringPrototypePropertyHasTheAttributeDontEnum(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.3.1")]
        [Category("ECMA 15.5.4")]
        [TestCase("S15.5.3.1_A3.js", Description = "The String.prototype property has the attribute DontDelete")]
        public void TheStringPrototypePropertyHasTheAttributeDontDelete(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.3.1")]
        [Category("ECMA 15.5.4")]
        [TestCase("S15.5.3.1_A4.js", Description = "The String.prototype property has the attribute ReadOnly")]
        public void TheStringPrototypePropertyHasTheAttributeReadOnly(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.3.2")]
        [TestCase("S15.5.3.2_A1.js", Description = "The length property of the fromCharCode function is 1")]
        public void TheLengthPropertyOfTheFromCharCodeFunctionIs1(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.3.2")]
        [TestCase("S15.5.3.2_A2.js", Description = "String.fromCharCode () returns empty string")]
        public void StringFromCharCodeReturnsEmptyString(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.3.2")]
        [TestCase("S15.5.3.2_A3_T1.js", Description = "String.fromCharCode ( [ char0 [ , char1 [ , ... ] ] ] )")]
        [TestCase("S15.5.3.2_A3_T2.js", Description = "String.fromCharCode ( [ char0 [ , char1 [ , ... ] ] ] )")]
        public void StringFromCharCodeChar0Char1(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.3.2")]
        [TestCase("S15.5.3.2_A4.js", Description = "String.fromCharCode has not [[construct]] method")]
        public void StringFromCharCodeHasNotConstructMethod(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.3")]
        [Category("ECMA 15.5.4")]
        [TestCase("S15.5.3_A1.js", Description = "String has length property whose value is 1")]
        public void StringHasLengthPropertyWhoseValueIs1(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.3")]
        [Category("ECMA 15.5.4")]
        [TestCase("S15.5.3_A2_T1.js", Description = "The value of the internal [[Prototype]] property of the String constructor is the Function prototype object")]
        [TestCase("S15.5.3_A2_T2.js", Description = "The value of the internal [[Prototype]] property of the String constructor is the Function prototype object")]
        public void TheValueOfTheInternalPrototypePropertyOfTheStringConstructorIsTheFunctionPrototypeObject(string file)
        {
            RunFile(file);
        }
    }
}