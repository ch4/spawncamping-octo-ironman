// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.StringObjects.PropertiesOfTheStringPrototypeObject
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class StringPrototypeConcatTests : SputnikTestFixture
    {
        public StringPrototypeConcatTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.5_String_Objects\15.5.4_Properties_of_the_String_Prototype_Object\15.5.4.6_String.prototype.concat")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.6")]
        [TestCase("S15.5.4.6_A1_T1.js", Description = "String.prototype.concat([,[...]])")]
        [TestCase("S15.5.4.6_A1_T10.js", Description = "String.prototype.concat([,[...]])")]
        [TestCase("S15.5.4.6_A1_T2.js", Description = "String.prototype.concat([,[...]])")]
        [TestCase("S15.5.4.6_A1_T3.js", Description = "String.prototype.concat([,[...]])")]
        [TestCase("S15.5.4.6_A1_T4.js", Description = "String.prototype.concat([,[...]])")]
        [TestCase("S15.5.4.6_A1_T5.js", Description = "String.prototype.concat([,[...]])")]
        [TestCase("S15.5.4.6_A1_T6.js", Description = "String.prototype.concat([,[...]])")]
        [TestCase("S15.5.4.6_A1_T7.js", Description = "String.prototype.concat([,[...]])")]
        [TestCase("S15.5.4.6_A1_T8.js", Description = "String.prototype.concat([,[...]])")]
        [TestCase("S15.5.4.6_A1_T9.js", Description = "String.prototype.concat([,[...]])")]
        public void StringPrototypeConcat(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.6")]
        [TestCase("S15.5.4.6_A10.js", Description = "The String.prototype.concat.length property has the attribute ReadOnly")]
        public void TheStringPrototypeConcatLengthPropertyHasTheAttributeReadOnly(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.6")]
        [TestCase("S15.5.4.6_A11.js", Description = "The length property of the concat method is 1")]
        public void TheLengthPropertyOfTheConcatMethodIs1(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.6")]
        [TestCase("S15.5.4.6_A2.js", Description = "String.prototype.concat([,[...]]) can accept at least 128")]
        public void StringPrototypeConcatCanAcceptAtLeast128(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.6")]
        [TestCase("S15.5.4.6_A3.js", Description = "String.prototype.concat([,[...]]) can\'t change the instance to be applied")]
        public void StringPrototypeConcatCanTChangeTheInstanceToBeApplied(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.6")]
        [TestCase("S15.5.4.6_A4_T1.js", Description = "when String.prototype.concat([,[...]]) is called first Call ToString, giving it the this value as its argument")]
        [TestCase("S15.5.4.6_A4_T2.js", Description = "when String.prototype.concat([,[...]]) is called first Call ToString, giving it the this value as its argument")]
        public void WhenStringPrototypeConcatIsCalledFirstCallToStringGivingItTheThisValueAsItsArgument(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 13.2")]
        [Category("ECMA 15.5.4.6")]
        [TestCase("S15.5.4.6_A6.js", Description = "String.prototype.concat has not prototype property")]
        public void StringPrototypeConcatHasNotPrototypeProperty(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 13.2")]
        [Category("ECMA 15.5.4.6")]
        [TestCase("S15.5.4.6_A7.js", Description = "String.prototype.concat can\'t be used as constructor")]
        public void StringPrototypeConcatCanTBeUsedAsConstructor(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.6")]
        [TestCase("S15.5.4.6_A8.js", Description = "The String.prototype.concat.length property has the attribute DontEnum")]
        public void TheStringPrototypeConcatLengthPropertyHasTheAttributeDontEnum(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.6")]
        [TestCase("S15.5.4.6_A9.js", Description = "The String.prototype.concat.length property has the attribute DontDelete")]
        public void TheStringPrototypeConcatLengthPropertyHasTheAttributeDontDelete(string file)
        {
            RunFile(file);
        }
    }
}