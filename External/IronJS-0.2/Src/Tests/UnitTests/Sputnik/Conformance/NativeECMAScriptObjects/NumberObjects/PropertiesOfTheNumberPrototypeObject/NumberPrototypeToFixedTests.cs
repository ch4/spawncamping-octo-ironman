// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.NumberObjects.PropertiesOfTheNumberPrototypeObject
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class NumberPrototypeToFixedTests : SputnikTestFixture
    {
        public NumberPrototypeToFixedTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.7_Number_Objects\15.7.4_Properties_of_the_Number_Prototype_Object\15.7.4.5_Number.prototype.toFixed")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.7.4.5")]
        [TestCase("S15.7.4.5_A1.1_T01.js", Description = "Step 1: Let f be ToInteger(fractionDigits). (If fractionDigits is undefined, this step produces the value 0)")]
        [TestCase("S15.7.4.5_A1.1_T02.js", Description = "Step 1: Let f be ToInteger(fractionDigits). (If fractionDigits is undefined, this step produces the value 0)")]
        public void Step1LetFBeToIntegerFractionDigitsIfFractionDigitsIsUndefinedThisStepProducesTheValue0(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.7.4.5")]
        [TestCase("S15.7.4.5_A1.3_T01.js", Description = "Step 4: If this number value is NaN, return the string \"NaN\"")]
        [TestCase("S15.7.4.5_A1.3_T02.js", Description = "Step 4: If this number value is NaN, return the string \"NaN\"")]
        public void Step4IfThisNumberValueIsNaNReturnTheStringNaN(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.7.4.5")]
        [TestCase("S15.7.4.5_A1.4_T01.js", Description = "Step 9: If x >= 10^21, let m = ToString(x)")]
        public void Step9IfX1021LetMToStringX(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.7.4.5")]
        [TestCase("S15.7.4.5_A2_T01.js", Description = "The length property of the toFixed method is 1")]
        public void TheLengthPropertyOfTheToFixedMethodIs1(string file)
        {
            RunFile(file);
        }
    }
}