// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.TheGlobalObject.ValuePropertiesOfTheGlobalObject
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class UndefinedTests : SputnikTestFixture
    {
        public UndefinedTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.1_The_Global_Object\15.1.1_Value_Properties_of_the_Global_Object\15.1.1.3_undefined")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.4.3")]
        [Category("ECMA 15.1.1.3")]
        [Category("ECMA 15.1.2.4")]
        [Category("ECMA 15.1.2.5")]
        [TestCase("S15.1.1.3_A1.js", Description = "The initial value of undefined is undefined")]
        public void TheInitialValueOfUndefinedIsUndefined(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.4.3")]
        [Category("ECMA 15.1.1.3")]
        [Category("ECMA 15.5.1")]
        [Category("ECMA 15.6.1")]
        [Category("ECMA 15.7.1")]
        [TestCase("S15.1.1.3_A2_T1.js", Description = "The undefined is not ReadOnly")]
        [TestCase("S15.1.1.3_A2_T2.js", Description = "The undefined is not ReadOnly")]
        public void TheUndefinedIsNotReadOnly(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.4.1")]
        [Category("ECMA 15.1.1.3")]
        [TestCase("S15.1.1.3_A3.1.js", Description = "The undefined is DontDelete")]
        public void TheUndefinedIsDontDelete(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 12.6.4")]
        [Category("ECMA 15.1.1.3")]
        [TestCase("S15.1.1.3_A3.2.js", Description = "The undefined is DontEnum")]
        public void TheUndefinedIsDontEnum(string file)
        {
            RunFile(file);
        }
    }
}