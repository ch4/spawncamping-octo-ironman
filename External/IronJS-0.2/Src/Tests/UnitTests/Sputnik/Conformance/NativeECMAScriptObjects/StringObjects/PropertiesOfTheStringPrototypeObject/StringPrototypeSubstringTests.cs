// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.StringObjects.PropertiesOfTheStringPrototypeObject
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class StringPrototypeSubstringTests : SputnikTestFixture
    {
        public StringPrototypeSubstringTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.5_String_Objects\15.5.4_Properties_of_the_String_Prototype_Object\15.5.4.15_String.prototype.substring")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.15")]
        [TestCase("S15.5.4.15_A1_T1.js", Description = "String.prototype.substring (start, end)")]
        [TestCase("S15.5.4.15_A1_T10.js", Description = "String.prototype.substring (start, end)")]
        [TestCase("S15.5.4.15_A1_T11.js", Description = "String.prototype.substring (start, end)")]
        [TestCase("S15.5.4.15_A1_T12.js", Description = "String.prototype.substring (start, end)")]
        [TestCase("S15.5.4.15_A1_T13.js", Description = "String.prototype.substring (start, end)")]
        [TestCase("S15.5.4.15_A1_T14.js", Description = "String.prototype.substring (start, end)")]
        [TestCase("S15.5.4.15_A1_T15.js", Description = "String.prototype.substring (start, end)")]
        [TestCase("S15.5.4.15_A1_T2.js", Description = "String.prototype.substring (start, end)")]
        [TestCase("S15.5.4.15_A1_T3.js", Description = "String.prototype.substring (start, end)")]
        [TestCase("S15.5.4.15_A1_T4.js", Description = "String.prototype.substring (start, end)")]
        [TestCase("S15.5.4.15_A1_T5.js", Description = "String.prototype.substring (start, end)")]
        [TestCase("S15.5.4.15_A1_T6.js", Description = "String.prototype.substring (start, end)")]
        [TestCase("S15.5.4.15_A1_T7.js", Description = "String.prototype.substring (start, end)")]
        [TestCase("S15.5.4.15_A1_T8.js", Description = "String.prototype.substring (start, end)")]
        [TestCase("S15.5.4.15_A1_T9.js", Description = "String.prototype.substring (start, end)")]
        public void StringPrototypeSubstringStartEnd(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.15")]
        [TestCase("S15.5.4.15_A10.js", Description = "The String.prototype.substring.length property has the attribute ReadOnly")]
        public void TheStringPrototypeSubstringLengthPropertyHasTheAttributeReadOnly(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.15")]
        [TestCase("S15.5.4.15_A11.js", Description = "The length property of the substring method is 2")]
        public void TheLengthPropertyOfTheSubstringMethodIs2(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.15")]
        [TestCase("S15.5.4.15_A2_T1.js", Description = "String.prototype.substring (start, end) returns a string value(not object)")]
        [TestCase("S15.5.4.15_A2_T10.js", Description = "String.prototype.substring (start, end) returns a string value(not object)")]
        [TestCase("S15.5.4.15_A2_T2.js", Description = "String.prototype.substring (start, end) returns a string value(not object)")]
        [TestCase("S15.5.4.15_A2_T3.js", Description = "String.prototype.substring (start, end) returns a string value(not object)")]
        [TestCase("S15.5.4.15_A2_T4.js", Description = "String.prototype.substring (start, end) returns a string value(not object)")]
        [TestCase("S15.5.4.15_A2_T5.js", Description = "String.prototype.substring (start, end) returns a string value(not object)")]
        [TestCase("S15.5.4.15_A2_T6.js", Description = "String.prototype.substring (start, end) returns a string value(not object)")]
        [TestCase("S15.5.4.15_A2_T7.js", Description = "String.prototype.substring (start, end) returns a string value(not object)")]
        [TestCase("S15.5.4.15_A2_T8.js", Description = "String.prototype.substring (start, end) returns a string value(not object)")]
        [TestCase("S15.5.4.15_A2_T9.js", Description = "String.prototype.substring (start, end) returns a string value(not object)")]
        public void StringPrototypeSubstringStartEndReturnsAStringValueNotObject(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.15")]
        [TestCase("S15.5.4.15_A3_T1.js", Description = "String.prototype.substring (start, end) can be applied to non String object instance and returns a string value(not object)")]
        [TestCase("S15.5.4.15_A3_T10.js", Description = "String.prototype.substring (start, end) can be applied to non String object instance and returns a string value(not object)")]
        [TestCase("S15.5.4.15_A3_T11.js", Description = "String.prototype.substring (start, end) can be applied to non String object instance and returns a string value(not object)")]
        [TestCase("S15.5.4.15_A3_T2.js", Description = "String.prototype.substring (start, end) can be applied to non String object instance and returns a string value(not object)")]
        [TestCase("S15.5.4.15_A3_T3.js", Description = "String.prototype.substring (start, end) can be applied to non String object instance and returns a string value(not object)")]
        [TestCase("S15.5.4.15_A3_T4.js", Description = "String.prototype.substring (start, end) can be applied to non String object instance and returns a string value(not object)")]
        [TestCase("S15.5.4.15_A3_T5.js", Description = "String.prototype.substring (start, end) can be applied to non String object instance and returns a string value(not object)")]
        [TestCase("S15.5.4.15_A3_T6.js", Description = "String.prototype.substring (start, end) can be applied to non String object instance and returns a string value(not object)")]
        [TestCase("S15.5.4.15_A3_T7.js", Description = "String.prototype.substring (start, end) can be applied to non String object instance and returns a string value(not object)")]
        [TestCase("S15.5.4.15_A3_T8.js", Description = "String.prototype.substring (start, end) can be applied to non String object instance and returns a string value(not object)")]
        [TestCase("S15.5.4.15_A3_T9.js", Description = "String.prototype.substring (start, end) can be applied to non String object instance and returns a string value(not object)")]
        public void StringPrototypeSubstringStartEndCanBeAppliedToNonStringObjectInstanceAndReturnsAStringValueNotObject(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 13.2")]
        [Category("ECMA 15.5.4.15")]
        [TestCase("S15.5.4.15_A6.js", Description = "String.prototype.substring has not prototype property")]
        public void StringPrototypeSubstringHasNotPrototypeProperty(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 13.2")]
        [Category("ECMA 15.5.4.15")]
        [TestCase("S15.5.4.15_A7.js", Description = "String.prototype.substring can\'t be used as constructor")]
        public void StringPrototypeSubstringCanTBeUsedAsConstructor(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.15")]
        [TestCase("S15.5.4.15_A8.js", Description = "The String.prototype.substring.length property has the attribute DontEnum")]
        public void TheStringPrototypeSubstringLengthPropertyHasTheAttributeDontEnum(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.5.4.15")]
        [TestCase("S15.5.4.15_A9.js", Description = "The String.prototype.substring.length property has the attribute DontDelete")]
        public void TheStringPrototypeSubstringLengthPropertyHasTheAttributeDontDelete(string file)
        {
            RunFile(file);
        }
    }
}