// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.TheMathObject.FunctionPropertiesOfTheMathObject
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class AtanTests : SputnikTestFixture
    {
        public AtanTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.8_The_Math_Object\15.8.2_Function_Properties_of_the_Math_Object\15.8.2.4_atan")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.8.2.4")]
        [TestCase("S15.8.2.4_A1.js", Description = "If x is NaN, Math.atan(x) is NaN")]
        public void IfXIsNaNMathAtanXIsNaN(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.8.2.4")]
        [TestCase("S15.8.2.4_A2.js", Description = "If x is +0, Math.atan(x) is +0")]
        [TestCase("S15.8.2.4_A3.js", Description = "If x is -0, Math.atan(x) is -0")]
        public void IfXIs0MathAtanXIs0(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.8.2.4")]
        [TestCase("S15.8.2.4_A4.js", Description = "If x is +Infinity, Math.atan(x) is an implementation-dependent approximation to +PI/2")]
        [TestCase("S15.8.2.4_A5.js", Description = "If x is -Infinity, Math.atan(x) is an implementation-dependent approximation to -PI/2")]
        public void IfXIsInfinityMathAtanXIsAnImplementationDependentApproximationToPI2(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 15.8.2.4")]
        [TestCase("S15.8.2.4_A6.js", Description = "Math.atan, recommended that implementations use the approximation algorithms for IEEE 754 arithmetic contained in fdlibm")]
        public void MathAtanRecommendedThatImplementationsUseTheApproximationAlgorithmsForIEEE754ArithmeticContainedInFdlibm(string file)
        {
            RunFile(file);
        }
    }
}