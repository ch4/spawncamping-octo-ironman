// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.Expressions.LeftHandSideExpressions
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class FunctionCallsTests : SputnikTestFixture
    {
        public FunctionCallsTests()
            : base(@"Conformance\11_Expressions\11.2_Left_Hand_Side_Expressions\11.2.3_Function_Calls")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.2.3")]
        [Category("ECMA 7.2")]
        [Category("ECMA 7.3")]
        [TestCase("S11.2.3_A1.js", Description = "White Space and Line Terminator between MemberExpression and Arguments are allowed")]
        public void WhiteSpaceAndLineTerminatorBetweenMemberExpressionAndArgumentsAreAllowed(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.2.3")]
        [TestCase("S11.2.3_A2.js", Description = "CallExpression : MemberExpression Arguments uses GetValue")]
        public void CallExpressionMemberExpressionArgumentsUsesGetValue(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.2.3")]
        [TestCase("S11.2.3_A3_T1.js", Description = "If MemberExpression is not Object, throw TypeError")]
        [TestCase("S11.2.3_A3_T2.js", Description = "If MemberExpression is not Object, throw TypeError")]
        [TestCase("S11.2.3_A3_T3.js", Description = "If MemberExpression is not Object, throw TypeError")]
        [TestCase("S11.2.3_A3_T4.js", Description = "If MemberExpression is not Object, throw TypeError")]
        [TestCase("S11.2.3_A3_T5.js", Description = "If MemberExpression is not Object, throw TypeError")]
        public void IfMemberExpressionIsNotObjectThrowTypeError(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.2.3")]
        [TestCase("S11.2.3_A4_T1.js", Description = "If MemberExpression does not implement the internal [[Call]] method, throw TypeError")]
        [TestCase("S11.2.3_A4_T2.js", Description = "If MemberExpression does not implement the internal [[Call]] method, throw TypeError")]
        [TestCase("S11.2.3_A4_T3.js", Description = "If MemberExpression does not implement the internal [[Call]] method, throw TypeError")]
        [TestCase("S11.2.3_A4_T4.js", Description = "If MemberExpression does not implement the internal [[Call]] method, throw TypeError")]
        [TestCase("S11.2.3_A4_T5.js", Description = "If MemberExpression does not implement the internal [[Call]] method, throw TypeError")]
        public void IfMemberExpressionDoesNotImplementTheInternalCallMethodThrowTypeError(string file)
        {
            RunFile(file);
        }
    }
}