// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.Expressions.UnaryOperators
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class TheTypeofOperatorTests : SputnikTestFixture
    {
        public TheTypeofOperatorTests()
            : base(@"Conformance\11_Expressions\11.4_Unary_Operators\11.4.3_The_typeof_Operator")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.4.3")]
        [TestCase("S11.4.3_A1.js", Description = "White Space and Line Terminator between \"typeof\" and UnaryExpression are allowed")]
        public void WhiteSpaceAndLineTerminatorBetweenTypeofAndUnaryExpressionAreAllowed(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.4.3")]
        [TestCase("S11.4.3_A2_T1.js", Description = "Operator \"typeof\" uses GetValue")]
        [TestCase("S11.4.3_A2_T2.js", Description = "Operator \"typeof\" uses GetValue")]
        public void OperatorTypeofUsesGetValue(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.4.3")]
        [TestCase("S11.4.3_A3.1.js", Description = "Result of applying \"typeof\" operator to undefined is \"undefined\"")]
        public void ResultOfApplyingTypeofOperatorToUndefinedIsUndefined(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.4.3")]
        [TestCase("S11.4.3_A3.2.js", Description = "Result of applying \"typeof\" operator to null is \"object\"")]
        public void ResultOfApplyingTypeofOperatorToNullIsObject(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.4.3")]
        [TestCase("S11.4.3_A3.3.js", Description = "Result of applying \"typeof\" operator to boolean is \"boolean\"")]
        public void ResultOfApplyingTypeofOperatorToBooleanIsBoolean(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.4.3")]
        [TestCase("S11.4.3_A3.4.js", Description = "Result of appying \"typeof\" operator to number is \"number\"")]
        public void ResultOfAppyingTypeofOperatorToNumberIsNumber(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.4.3")]
        [TestCase("S11.4.3_A3.5.js", Description = "Result of appying \"typeof\" operator to string is \"string\"")]
        public void ResultOfAppyingTypeofOperatorToStringIsString(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.4.3")]
        [TestCase("S11.4.3_A3.6.js", Description = "Result of applying \"typeof\" operator to the object that is native and doesn\'t implement [[Call]] is \"object\"")]
        public void ResultOfApplyingTypeofOperatorToTheObjectThatIsNativeAndDoesnTImplementCallIsObject(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.4.3")]
        [TestCase("S11.4.3_A3.7.js", Description = "Result of applying \"typeof\" operator to the object that is native and implements [[Call]] is \"function\"")]
        public void ResultOfApplyingTypeofOperatorToTheObjectThatIsNativeAndImplementsCallIsFunction(string file)
        {
            RunFile(file);
        }
    }
}