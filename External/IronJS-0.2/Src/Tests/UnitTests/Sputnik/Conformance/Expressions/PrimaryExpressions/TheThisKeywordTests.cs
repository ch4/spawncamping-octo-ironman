// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.Expressions.PrimaryExpressions
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class TheThisKeywordTests : SputnikTestFixture
    {
        public TheThisKeywordTests()
            : base(@"Conformance\11_Expressions\11.1_Primary_Expressions\11.1.1_The_this_Keyword")
        {
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.1.1")]
        [TestCase("S11.1.1_A1.js", Description = "The \"this\" is reserved word", ExpectedException = typeof(Exception))]
        public void TheThisIsReservedWord(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.1.1")]
        [TestCase("S11.1.1_A2.js", Description = "Being in global code, \"this\" and \"eval(\"this\")\" return the global object")]
        public void BeingInGlobalCodeThisAndEvalThisReturnTheGlobalObject(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.1.1")]
        [TestCase("S11.1.1_A3.1.js", Description = "Being in function code, \"this\" and eval(\"this\"), called as a functions, return the global object")]
        public void BeingInFunctionCodeThisAndEvalThisCalledAsAFunctionsReturnTheGlobalObject(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.1.1")]
        [TestCase("S11.1.1_A3.2.js", Description = "Being in function code, \"this\" and eval(\"this\"), called as a constructors, return the object")]
        public void BeingInFunctionCodeThisAndEvalThisCalledAsAConstructorsReturnTheObject(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.1.1")]
        [TestCase("S11.1.1_A4.1.js", Description = "Being in anonymous code, \"this\" and eval(\"this\"), called as a function, return the global object")]
        public void BeingInAnonymousCodeThisAndEvalThisCalledAsAFunctionReturnTheGlobalObject(string file)
        {
            RunFile(file);
        }

        [Test]
        [Category("Sputnik Conformance")]
        [Category("ECMA 11.1.1")]
        [TestCase("S11.1.1_A4.2.js", Description = "Being in anonymous code, \"this\" and eval(\"this\"), called as a constructor, return the object")]
        public void BeingInAnonymousCodeThisAndEvalThisCalledAsAConstructorReturnTheObject(string file)
        {
            RunFile(file);
        }
    }
}